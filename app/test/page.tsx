'use client';

import React from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';

const TestPage = () => {
    const [sourceImage, setSourceImage] = React.useState<string | null>(null);
    const [imageWithoutBg, setImageWithoutBg] = React.useState<string | null>(null);
    const [productInfo, setProductInfo] = React.useState<any>(null);
    const [isLoading, setIsLoading] = React.useState(false);

    const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
        if (event.target.files && event.target.files[0]) {
            const file = event.target.files[0];
            const reader = new FileReader();
            reader.onloadend = () => {
                setSourceImage(reader.result as string);
                setImageWithoutBg(null);
                setProductInfo(null);
            };
            reader.readAsDataURL(file);
        }
    };

    const handleProcessImage = async () => {
        if (!sourceImage) return;

        setIsLoading(true);

        // Placeholder for background removal
        // In a real app, this would be an API call
        setTimeout(() => {
            // For demonstration, let's just use the source image as the result
            setImageWithoutBg(sourceImage);
        }, 1000);

        // Placeholder for AI information extraction
        // In a real app, this would be an API call to a vision model
        setTimeout(() => {
            setProductInfo({
                name: 'AI-Generated Product Name',
                description: 'This is a description generated by an AI based on the product image.',
                price: '99.99',
                category: 'Electronics',
            });
            setIsLoading(false);
        }, 2000);
    };

    return (
        <div className="container mx-auto py-10">
            <h1 className="text-3xl font-bold mb-6">AI Product Assistant</h1>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                <div>
                    <h2 className="text-2xl font-semibold mb-4">1. Upload Image</h2>
                    <div className="flex flex-col gap-4">
                        <Label htmlFor="product-image">Product Image</Label>
                        <Input id="product-image" type="file" onChange={handleImageUpload} accept="image/*" />
                        {sourceImage && (
                            <div className="mt-4">
                                <h3 className="font-semibold">Original Image:</h3>
                                <img src={sourceImage} alt="Source" className="rounded-lg border object-contain" />
                            </div>
                        )}
                    </div>

                    {sourceImage && (
                        <Button onClick={handleProcessImage} disabled={isLoading} className="mt-6">
                            {isLoading ? 'Processing...' : 'Generate Product Info'}
                        </Button>
                    )}
                </div>

                <div>
                    <h2 className="text-2xl font-semibold mb-4">2. AI Results</h2>
                    <div className="space-y-6">
                        {isLoading && <p>AI is thinking...</p>}

                        {imageWithoutBg && (
                            <div>
                                <h3 className="font-semibold mb-2">Image (Background Removed):</h3>
                                <img src={imageWithoutBg} alt="No background" className="rounded-lg border object-contain bg-gray-200" />
                            </div>
                        )}

                        {productInfo && (
                            <div>
                                <h3 className="font-semibold mb-2">Generated Information:</h3>
                                <div className="p-4 border rounded-lg bg-gray-50 space-y-2">
                                    <p><strong>Name:</strong> {productInfo.name}</p>
                                    <p><strong>Description:</strong> {productInfo.description}</p>
                                    <p><strong>Price:</strong> ${productInfo.price}</p>
                                    <p><strong>Category:</strong> {productInfo.category}</p>
                                </div>
                            </div>
                        )}
                    </div>
                </div>
            </div>
        </div>
    );
};

export default TestPage; 